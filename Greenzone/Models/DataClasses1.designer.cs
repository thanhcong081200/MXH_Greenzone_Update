#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Greenzone.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MXH_GreenZone")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaiViet(BaiViet instance);
    partial void UpdateBaiViet(BaiViet instance);
    partial void DeleteBaiViet(BaiViet instance);
    partial void InsertVideoCuocHop(VideoCuocHop instance);
    partial void UpdateVideoCuocHop(VideoCuocHop instance);
    partial void DeleteVideoCuocHop(VideoCuocHop instance);
    partial void InsertBanBe(BanBe instance);
    partial void UpdateBanBe(BanBe instance);
    partial void DeleteBanBe(BanBe instance);
    partial void InsertCall(Call instance);
    partial void UpdateCall(Call instance);
    partial void DeleteCall(Call instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertGroup_page(Group_page instance);
    partial void UpdateGroup_page(Group_page instance);
    partial void DeleteGroup_page(Group_page instance);
    partial void InsertGroup_Sticker(Group_Sticker instance);
    partial void UpdateGroup_Sticker(Group_Sticker instance);
    partial void DeleteGroup_Sticker(Group_Sticker instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertLike(Like instance);
    partial void UpdateLike(Like instance);
    partial void DeleteLike(Like instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertMessages_PhongHop(Messages_PhongHop instance);
    partial void UpdateMessages_PhongHop(Messages_PhongHop instance);
    partial void DeleteMessages_PhongHop(Messages_PhongHop instance);
    partial void InsertPhongHop(PhongHop instance);
    partial void UpdatePhongHop(PhongHop instance);
    partial void DeletePhongHop(PhongHop instance);
    partial void InsertShare(Share instance);
    partial void UpdateShare(Share instance);
    partial void DeleteShare(Share instance);
    partial void InsertSticker(Sticker instance);
    partial void UpdateSticker(Sticker instance);
    partial void DeleteSticker(Sticker instance);
    partial void InsertTagBaiViet(TagBaiViet instance);
    partial void UpdateTagBaiViet(TagBaiViet instance);
    partial void DeleteTagBaiViet(TagBaiViet instance);
    partial void InsertType(Type instance);
    partial void UpdateType(Type instance);
    partial void DeleteType(Type instance);
    partial void InsertThongBao(ThongBao instance);
    partial void UpdateThongBao(ThongBao instance);
    partial void DeleteThongBao(ThongBao instance);
    partial void InsertUser_Group(User_Group instance);
    partial void UpdateUser_Group(User_Group instance);
    partial void DeleteUser_Group(User_Group instance);
    partial void InsertUser_Group_Page(User_Group_Page instance);
    partial void UpdateUser_Group_Page(User_Group_Page instance);
    partial void DeleteUser_Group_Page(User_Group_Page instance);
    partial void InsertUser_TGHop(User_TGHop instance);
    partial void UpdateUser_TGHop(User_TGHop instance);
    partial void DeleteUser_TGHop(User_TGHop instance);
    partial void InsertUserConnection(UserConnection instance);
    partial void UpdateUserConnection(UserConnection instance);
    partial void DeleteUserConnection(UserConnection instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MXH_GreenZoneConnectionString3"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaiViet> BaiViets
		{
			get
			{
				return this.GetTable<BaiViet>();
			}
		}
		
		public System.Data.Linq.Table<VideoCuocHop> VideoCuocHops
		{
			get
			{
				return this.GetTable<VideoCuocHop>();
			}
		}
		
		public System.Data.Linq.Table<BanBe> BanBes
		{
			get
			{
				return this.GetTable<BanBe>();
			}
		}
		
		public System.Data.Linq.Table<Call> Calls
		{
			get
			{
				return this.GetTable<Call>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Group_page> Group_pages
		{
			get
			{
				return this.GetTable<Group_page>();
			}
		}
		
		public System.Data.Linq.Table<Group_Sticker> Group_Stickers
		{
			get
			{
				return this.GetTable<Group_Sticker>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<Like> Likes
		{
			get
			{
				return this.GetTable<Like>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Messages_PhongHop> Messages_PhongHops
		{
			get
			{
				return this.GetTable<Messages_PhongHop>();
			}
		}
		
		public System.Data.Linq.Table<PhongHop> PhongHops
		{
			get
			{
				return this.GetTable<PhongHop>();
			}
		}
		
		public System.Data.Linq.Table<Share> Shares
		{
			get
			{
				return this.GetTable<Share>();
			}
		}
		
		public System.Data.Linq.Table<Sticker> Stickers
		{
			get
			{
				return this.GetTable<Sticker>();
			}
		}
		
		public System.Data.Linq.Table<TagBaiViet> TagBaiViets
		{
			get
			{
				return this.GetTable<TagBaiViet>();
			}
		}
		
		public System.Data.Linq.Table<Type> Types
		{
			get
			{
				return this.GetTable<Type>();
			}
		}
		
		public System.Data.Linq.Table<ThongBao> ThongBaos
		{
			get
			{
				return this.GetTable<ThongBao>();
			}
		}
		
		public System.Data.Linq.Table<User_Group> User_Groups
		{
			get
			{
				return this.GetTable<User_Group>();
			}
		}
		
		public System.Data.Linq.Table<User_Group_Page> User_Group_Pages
		{
			get
			{
				return this.GetTable<User_Group_Page>();
			}
		}
		
		public System.Data.Linq.Table<User_TGHop> User_TGHops
		{
			get
			{
				return this.GetTable<User_TGHop>();
			}
		}
		
		public System.Data.Linq.Table<UserConnection> UserConnections
		{
			get
			{
				return this.GetTable<UserConnection>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiViet")]
	public partial class BaiViet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idBaiViet;
		
		private string _idUser;
		
		private string _Noidung;
		
		private string _HinhAnh;
		
		private string _Video;
		
		private string _CheDo;
		
		private System.Nullable<int> _LuotLike;
		
		private System.Nullable<int> _LuotShare;
		
		private System.Nullable<int> _LuotComment;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private string _idGroup_Page;
		
		private string _idBaiVietShare;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Like> _Likes;
		
		private EntitySet<Share> _Shares;
		
		private EntitySet<TagBaiViet> _TagBaiViets;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntityRef<Group_page> _Group_page;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnCheDoChanging(string value);
    partial void OnCheDoChanged();
    partial void OnLuotLikeChanging(System.Nullable<int> value);
    partial void OnLuotLikeChanged();
    partial void OnLuotShareChanging(System.Nullable<int> value);
    partial void OnLuotShareChanged();
    partial void OnLuotCommentChanging(System.Nullable<int> value);
    partial void OnLuotCommentChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnidGroup_PageChanging(string value);
    partial void OnidGroup_PageChanged();
    partial void OnidBaiVietShareChanging(string value);
    partial void OnidBaiVietShareChanged();
    #endregion
		
		public BaiViet()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Likes = new EntitySet<Like>(new Action<Like>(this.attach_Likes), new Action<Like>(this.detach_Likes));
			this._Shares = new EntitySet<Share>(new Action<Share>(this.attach_Shares), new Action<Share>(this.detach_Shares));
			this._TagBaiViets = new EntitySet<TagBaiViet>(new Action<TagBaiViet>(this.attach_TagBaiViets), new Action<TagBaiViet>(this.detach_TagBaiViets));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._Group_page = default(EntityRef<Group_page>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(MAX)")]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(MAX)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="VarChar(MAX)")]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheDo", DbType="NVarChar(50)")]
		public string CheDo
		{
			get
			{
				return this._CheDo;
			}
			set
			{
				if ((this._CheDo != value))
				{
					this.OnCheDoChanging(value);
					this.SendPropertyChanging();
					this._CheDo = value;
					this.SendPropertyChanged("CheDo");
					this.OnCheDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotLike", DbType="Int")]
		public System.Nullable<int> LuotLike
		{
			get
			{
				return this._LuotLike;
			}
			set
			{
				if ((this._LuotLike != value))
				{
					this.OnLuotLikeChanging(value);
					this.SendPropertyChanging();
					this._LuotLike = value;
					this.SendPropertyChanged("LuotLike");
					this.OnLuotLikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotShare", DbType="Int")]
		public System.Nullable<int> LuotShare
		{
			get
			{
				return this._LuotShare;
			}
			set
			{
				if ((this._LuotShare != value))
				{
					this.OnLuotShareChanging(value);
					this.SendPropertyChanging();
					this._LuotShare = value;
					this.SendPropertyChanged("LuotShare");
					this.OnLuotShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuotComment", DbType="Int")]
		public System.Nullable<int> LuotComment
		{
			get
			{
				return this._LuotComment;
			}
			set
			{
				if ((this._LuotComment != value))
				{
					this.OnLuotCommentChanging(value);
					this.SendPropertyChanging();
					this._LuotComment = value;
					this.SendPropertyChanged("LuotComment");
					this.OnLuotCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup_Page", DbType="VarChar(20)")]
		public string idGroup_Page
		{
			get
			{
				return this._idGroup_Page;
			}
			set
			{
				if ((this._idGroup_Page != value))
				{
					if (this._Group_page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroup_PageChanging(value);
					this.SendPropertyChanging();
					this._idGroup_Page = value;
					this.SendPropertyChanged("idGroup_Page");
					this.OnidGroup_PageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiVietShare", DbType="VarChar(20)")]
		public string idBaiVietShare
		{
			get
			{
				return this._idBaiVietShare;
			}
			set
			{
				if ((this._idBaiVietShare != value))
				{
					this.OnidBaiVietShareChanging(value);
					this.SendPropertyChanging();
					this._idBaiVietShare = value;
					this.SendPropertyChanged("idBaiVietShare");
					this.OnidBaiVietShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Comment", Storage="_Comments", ThisKey="idBaiViet", OtherKey="idBaiViet")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Like", Storage="_Likes", ThisKey="idBaiViet", OtherKey="idBaiViet")]
		public EntitySet<Like> Likes
		{
			get
			{
				return this._Likes;
			}
			set
			{
				this._Likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Share", Storage="_Shares", ThisKey="idBaiViet", OtherKey="idBaiViet")]
		public EntitySet<Share> Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				this._Shares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_TagBaiViet", Storage="_TagBaiViets", ThisKey="idBaiViet", OtherKey="idBaiViet")]
		public EntitySet<TagBaiViet> TagBaiViets
		{
			get
			{
				return this._TagBaiViets;
			}
			set
			{
				this._TagBaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_ThongBao", Storage="_ThongBaos", ThisKey="idBaiViet", OtherKey="idBaiViet")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_page_BaiViet", Storage="_Group_page", ThisKey="idGroup_Page", OtherKey="idGoup", IsForeignKey=true)]
		public Group_page Group_page
		{
			get
			{
				return this._Group_page.Entity;
			}
			set
			{
				Group_page previousValue = this._Group_page.Entity;
				if (((previousValue != value) 
							|| (this._Group_page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group_page.Entity = null;
						previousValue.BaiViets.Remove(this);
					}
					this._Group_page.Entity = value;
					if ((value != null))
					{
						value.BaiViets.Add(this);
						this._idGroup_Page = value.idGoup;
					}
					else
					{
						this._idGroup_Page = default(string);
					}
					this.SendPropertyChanged("Group_page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BaiViet", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BaiViets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BaiViets.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
		
		private void attach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
		
		private void attach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
		
		private void attach_TagBaiViets(TagBaiViet entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_TagBaiViets(TagBaiViet entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VideoCuocHop")]
	public partial class VideoCuocHop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idVideo;
		
		private string _idUser;
		
		private string _idPhongHop;
		
		private string _Video;
		
		private System.Nullable<System.DateTime> _ThoiGianBD;
		
		private System.Nullable<System.DateTime> _ThoiGianKT;
		
		private string _ThoiLuong;
		
		private EntityRef<PhongHop> _PhongHop;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidVideoChanging(string value);
    partial void OnidVideoChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnidPhongHopChanging(string value);
    partial void OnidPhongHopChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnThoiGianBDChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDChanged();
    partial void OnThoiGianKTChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKTChanged();
    partial void OnThoiLuongChanging(string value);
    partial void OnThoiLuongChanged();
    #endregion
		
		public VideoCuocHop()
		{
			this._PhongHop = default(EntityRef<PhongHop>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVideo", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idVideo
		{
			get
			{
				return this._idVideo;
			}
			set
			{
				if ((this._idVideo != value))
				{
					this.OnidVideoChanging(value);
					this.SendPropertyChanging();
					this._idVideo = value;
					this.SendPropertyChanged("idVideo");
					this.OnidVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongHop", DbType="VarChar(20)")]
		public string idPhongHop
		{
			get
			{
				return this._idPhongHop;
			}
			set
			{
				if ((this._idPhongHop != value))
				{
					if (this._PhongHop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongHopChanging(value);
					this.SendPropertyChanging();
					this._idPhongHop = value;
					this.SendPropertyChanged("idPhongHop");
					this.OnidPhongHopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="VarChar(MAX)")]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKT
		{
			get
			{
				return this._ThoiGianKT;
			}
			set
			{
				if ((this._ThoiGianKT != value))
				{
					this.OnThoiGianKTChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKT = value;
					this.SendPropertyChanged("ThoiGianKT");
					this.OnThoiGianKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="NVarChar(50)")]
		public string ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_VideoCuocHop", Storage="_PhongHop", ThisKey="idPhongHop", OtherKey="idPhongHop", IsForeignKey=true)]
		public PhongHop PhongHop
		{
			get
			{
				return this._PhongHop.Entity;
			}
			set
			{
				PhongHop previousValue = this._PhongHop.Entity;
				if (((previousValue != value) 
							|| (this._PhongHop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHop.Entity = null;
						previousValue.VideoCuocHops.Remove(this);
					}
					this._PhongHop.Entity = value;
					if ((value != null))
					{
						value.VideoCuocHops.Add(this);
						this._idPhongHop = value.idPhongHop;
					}
					else
					{
						this._idPhongHop = default(string);
					}
					this.SendPropertyChanged("PhongHop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoCuocHop", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.VideoCuocHops.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.VideoCuocHops.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanBe")]
	public partial class BanBe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUser1;
		
		private string _idUser2;
		
		private string _TrangThai;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUser1Changing(string value);
    partial void OnidUser1Changed();
    partial void OnidUser2Changing(string value);
    partial void OnidUser2Changed();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public BanBe()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser1", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser1
		{
			get
			{
				return this._idUser1;
			}
			set
			{
				if ((this._idUser1 != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUser1Changing(value);
					this.SendPropertyChanging();
					this._idUser1 = value;
					this.SendPropertyChanged("idUser1");
					this.OnidUser1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser2", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser2
		{
			get
			{
				return this._idUser2;
			}
			set
			{
				if ((this._idUser2 != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUser2Changing(value);
					this.SendPropertyChanging();
					this._idUser2 = value;
					this.SendPropertyChanged("idUser2");
					this.OnidUser2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanBe", Storage="_User", ThisKey="idUser1", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BanBes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BanBes.Add(this);
						this._idUser1 = value.idUser;
					}
					else
					{
						this._idUser1 = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanBe1", Storage="_User1", ThisKey="idUser2", OtherKey="idUser", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.BanBes1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.BanBes1.Add(this);
						this._idUser2 = value.idUser;
					}
					else
					{
						this._idUser2 = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calls")]
	public partial class Call : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCall;
		
		private System.Nullable<System.DateTime> _ThoiGianBD;
		
		private System.Nullable<System.DateTime> _ThoiGianKT;
		
		private string _ThoiLuong;
		
		private string _TrangThai;
		
		private string _idUser;
		
		private string _idGroup;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCallChanging(string value);
    partial void OnidCallChanged();
    partial void OnThoiGianBDChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDChanged();
    partial void OnThoiGianKTChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKTChanged();
    partial void OnThoiLuongChanging(string value);
    partial void OnThoiLuongChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    #endregion
		
		public Call()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCall", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCall
		{
			get
			{
				return this._idCall;
			}
			set
			{
				if ((this._idCall != value))
				{
					this.OnidCallChanging(value);
					this.SendPropertyChanging();
					this._idCall = value;
					this.SendPropertyChanged("idCall");
					this.OnidCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKT
		{
			get
			{
				return this._ThoiGianKT;
			}
			set
			{
				if ((this._ThoiGianKT != value))
				{
					this.OnThoiGianKTChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKT = value;
					this.SendPropertyChanged("ThoiGianKT");
					this.OnThoiGianKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="NVarChar(50)")]
		public string ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(20)")]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Call", Storage="_Group", ThisKey="idGroup", OtherKey="idGroup", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Calls.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Calls.Add(this);
						this._idGroup = value.idGroup;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Call", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Calls.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Calls.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCmt;
		
		private string _idBaiViet;
		
		private string _idUser;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private string _TraloiCmt;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<Comment> _Comment1;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCmtChanging(string value);
    partial void OnidCmtChanged();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnTraloiCmtChanging(string value);
    partial void OnTraloiCmtChanged();
    #endregion
		
		public Comment()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._BaiViet = default(EntityRef<BaiViet>);
			this._Comment1 = default(EntityRef<Comment>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCmt", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCmt
		{
			get
			{
				return this._idCmt;
			}
			set
			{
				if ((this._idCmt != value))
				{
					this.OnidCmtChanging(value);
					this.SendPropertyChanging();
					this._idCmt = value;
					this.SendPropertyChanged("idCmt");
					this.OnidCmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20)")]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraloiCmt", DbType="VarChar(20)")]
		public string TraloiCmt
		{
			get
			{
				return this._TraloiCmt;
			}
			set
			{
				if ((this._TraloiCmt != value))
				{
					if (this._Comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTraloiCmtChanging(value);
					this.SendPropertyChanging();
					this._TraloiCmt = value;
					this.SendPropertyChanged("TraloiCmt");
					this.OnTraloiCmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comments", ThisKey="idCmt", OtherKey="TraloiCmt")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_ThongBao", Storage="_ThongBaos", ThisKey="idCmt", OtherKey="idCmt")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Comment", Storage="_BaiViet", ThisKey="idBaiViet", OtherKey="idBaiViet", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._idBaiViet = value.idBaiViet;
					}
					else
					{
						this._idBaiViet = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_Comment", Storage="_Comment1", ThisKey="TraloiCmt", OtherKey="idCmt", IsForeignKey=true)]
		public Comment Comment1
		{
			get
			{
				return this._Comment1.Entity;
			}
			set
			{
				Comment previousValue = this._Comment1.Entity;
				if (((previousValue != value) 
							|| (this._Comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment1.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Comment1.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._TraloiCmt = value.idCmt;
					}
					else
					{
						this._TraloiCmt = default(string);
					}
					this.SendPropertyChanged("Comment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment1 = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Comment1 = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_page")]
	public partial class Group_page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGoup;
		
		private string _GoupName;
		
		private string _idUserHost;
		
		private string _AnhDaiDien;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _GioiThieu;
		
		private EntitySet<BaiViet> _BaiViets;
		
		private EntitySet<User_Group_Page> _User_Group_Pages;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGoupChanging(string value);
    partial void OnidGoupChanged();
    partial void OnGoupNameChanging(string value);
    partial void OnGoupNameChanged();
    partial void OnidUserHostChanging(string value);
    partial void OnidUserHostChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnGioiThieuChanging(string value);
    partial void OnGioiThieuChanged();
    #endregion
		
		public Group_page()
		{
			this._BaiViets = new EntitySet<BaiViet>(new Action<BaiViet>(this.attach_BaiViets), new Action<BaiViet>(this.detach_BaiViets));
			this._User_Group_Pages = new EntitySet<User_Group_Page>(new Action<User_Group_Page>(this.attach_User_Group_Pages), new Action<User_Group_Page>(this.detach_User_Group_Pages));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGoup", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGoup
		{
			get
			{
				return this._idGoup;
			}
			set
			{
				if ((this._idGoup != value))
				{
					this.OnidGoupChanging(value);
					this.SendPropertyChanging();
					this._idGoup = value;
					this.SendPropertyChanged("idGoup");
					this.OnidGoupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoupName", DbType="NVarChar(MAX)")]
		public string GoupName
		{
			get
			{
				return this._GoupName;
			}
			set
			{
				if ((this._GoupName != value))
				{
					this.OnGoupNameChanging(value);
					this.SendPropertyChanging();
					this._GoupName = value;
					this.SendPropertyChanged("GoupName");
					this.OnGoupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserHost", DbType="VarChar(20)")]
		public string idUserHost
		{
			get
			{
				return this._idUserHost;
			}
			set
			{
				if ((this._idUserHost != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserHostChanging(value);
					this.SendPropertyChanging();
					this._idUserHost = value;
					this.SendPropertyChanged("idUserHost");
					this.OnidUserHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="NVarChar(MAX)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(MAX)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiThieu", DbType="NVarChar(MAX)")]
		public string GioiThieu
		{
			get
			{
				return this._GioiThieu;
			}
			set
			{
				if ((this._GioiThieu != value))
				{
					this.OnGioiThieuChanging(value);
					this.SendPropertyChanging();
					this._GioiThieu = value;
					this.SendPropertyChanged("GioiThieu");
					this.OnGioiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_page_BaiViet", Storage="_BaiViets", ThisKey="idGoup", OtherKey="idGroup_Page")]
		public EntitySet<BaiViet> BaiViets
		{
			get
			{
				return this._BaiViets;
			}
			set
			{
				this._BaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_page_User_Group_Page", Storage="_User_Group_Pages", ThisKey="idGoup", OtherKey="idGroup_Page")]
		public EntitySet<User_Group_Page> User_Group_Pages
		{
			get
			{
				return this._User_Group_Pages;
			}
			set
			{
				this._User_Group_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group_page", Storage="_User", ThisKey="idUserHost", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Group_pages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Group_pages.Add(this);
						this._idUserHost = value.idUser;
					}
					else
					{
						this._idUserHost = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.Group_page = this;
		}
		
		private void detach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.Group_page = null;
		}
		
		private void attach_User_Group_Pages(User_Group_Page entity)
		{
			this.SendPropertyChanging();
			entity.Group_page = this;
		}
		
		private void detach_User_Group_Pages(User_Group_Page entity)
		{
			this.SendPropertyChanging();
			entity.Group_page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_Sticker")]
	public partial class Group_Sticker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup_Sticker;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<Sticker> _Stickers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroup_StickerChanging(string value);
    partial void OnidGroup_StickerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public Group_Sticker()
		{
			this._Stickers = new EntitySet<Sticker>(new Action<Sticker>(this.attach_Stickers), new Action<Sticker>(this.detach_Stickers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup_Sticker", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup_Sticker
		{
			get
			{
				return this._idGroup_Sticker;
			}
			set
			{
				if ((this._idGroup_Sticker != value))
				{
					this.OnidGroup_StickerChanging(value);
					this.SendPropertyChanging();
					this._idGroup_Sticker = value;
					this.SendPropertyChanged("idGroup_Sticker");
					this.OnidGroup_StickerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Sticker_Sticker", Storage="_Stickers", ThisKey="idGroup_Sticker", OtherKey="idGroup_Sticker")]
		public EntitySet<Sticker> Stickers
		{
			get
			{
				return this._Stickers;
			}
			set
			{
				this._Stickers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stickers(Sticker entity)
		{
			this.SendPropertyChanging();
			entity.Group_Sticker = this;
		}
		
		private void detach_Stickers(Sticker entity)
		{
			this.SendPropertyChanging();
			entity.Group_Sticker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup;
		
		private string _GroupName;
		
		private System.Nullable<System.DateTime> _ThoiGianTao;
		
		private string _idUserQL;
		
		private string _AnhNen;
		
		private string _AnhDaiDien;
		
		private System.Nullable<int> _SoThanhVien;
		
		private EntitySet<Call> _Calls;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<User_Group> _User_Groups;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnThoiGianTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianTaoChanged();
    partial void OnidUserQLChanging(string value);
    partial void OnidUserQLChanged();
    partial void OnAnhNenChanging(string value);
    partial void OnAnhNenChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    partial void OnSoThanhVienChanging(System.Nullable<int> value);
    partial void OnSoThanhVienChanged();
    #endregion
		
		public Group()
		{
			this._Calls = new EntitySet<Call>(new Action<Call>(this.attach_Calls), new Action<Call>(this.detach_Calls));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._User_Groups = new EntitySet<User_Group>(new Action<User_Group>(this.attach_User_Groups), new Action<User_Group>(this.detach_User_Groups));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(MAX)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianTao
		{
			get
			{
				return this._ThoiGianTao;
			}
			set
			{
				if ((this._ThoiGianTao != value))
				{
					this.OnThoiGianTaoChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianTao = value;
					this.SendPropertyChanged("ThoiGianTao");
					this.OnThoiGianTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserQL", DbType="VarChar(20)")]
		public string idUserQL
		{
			get
			{
				return this._idUserQL;
			}
			set
			{
				if ((this._idUserQL != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserQLChanging(value);
					this.SendPropertyChanging();
					this._idUserQL = value;
					this.SendPropertyChanged("idUserQL");
					this.OnidUserQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhNen", DbType="VarChar(MAX)")]
		public string AnhNen
		{
			get
			{
				return this._AnhNen;
			}
			set
			{
				if ((this._AnhNen != value))
				{
					this.OnAnhNenChanging(value);
					this.SendPropertyChanging();
					this._AnhNen = value;
					this.SendPropertyChanged("AnhNen");
					this.OnAnhNenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="VarChar(MAX)")]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThanhVien", DbType="Int")]
		public System.Nullable<int> SoThanhVien
		{
			get
			{
				return this._SoThanhVien;
			}
			set
			{
				if ((this._SoThanhVien != value))
				{
					this.OnSoThanhVienChanging(value);
					this.SendPropertyChanging();
					this._SoThanhVien = value;
					this.SendPropertyChanged("SoThanhVien");
					this.OnSoThanhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Call", Storage="_Calls", ThisKey="idGroup", OtherKey="idGroup")]
		public EntitySet<Call> Calls
		{
			get
			{
				return this._Calls;
			}
			set
			{
				this._Calls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Message", Storage="_Messages", ThisKey="idGroup", OtherKey="idGroup")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User_Group", Storage="_User_Groups", ThisKey="idGroup", OtherKey="idGroup")]
		public EntitySet<User_Group> User_Groups
		{
			get
			{
				return this._User_Groups;
			}
			set
			{
				this._User_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group", Storage="_User", ThisKey="idUserQL", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._idUserQL = value.idUser;
					}
					else
					{
						this._idUserQL = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Likes")]
	public partial class Like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idBaiViet;
		
		private string _idUser;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    #endregion
		
		public Like()
		{
			this._BaiViet = default(EntityRef<BaiViet>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Like", Storage="_BaiViet", ThisKey="idBaiViet", OtherKey="idBaiViet", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.Likes.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.Likes.Add(this);
						this._idBaiViet = value.idBaiViet;
					}
					else
					{
						this._idBaiViet = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Likes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Likes.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idMess;
		
		private string _NoiDung;
		
		private string _idUser;
		
		private string _idGroup;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _idType;
		
		private string _TrangThai;
		
		private string _TLMess;
		
		private EntitySet<Message> _Messages;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<Message> _Message1;
		
		private EntityRef<Type> _Type;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMessChanging(string value);
    partial void OnidMessChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnidTypeChanging(string value);
    partial void OnidTypeChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnTLMessChanging(string value);
    partial void OnTLMessChanged();
    #endregion
		
		public Message()
		{
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Group = default(EntityRef<Group>);
			this._Message1 = default(EntityRef<Message>);
			this._Type = default(EntityRef<Type>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMess", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idMess
		{
			get
			{
				return this._idMess;
			}
			set
			{
				if ((this._idMess != value))
				{
					this.OnidMessChanging(value);
					this.SendPropertyChanging();
					this._idMess = value;
					this.SendPropertyChanged("idMess");
					this.OnidMessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(20)")]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if ((this._Group.HasLoadedOrAssignedValue || this._User1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="VarChar(20)")]
		public string idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLMess", DbType="VarChar(20)")]
		public string TLMess
		{
			get
			{
				return this._TLMess;
			}
			set
			{
				if ((this._TLMess != value))
				{
					if (this._Message1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLMessChanging(value);
					this.SendPropertyChanging();
					this._TLMess = value;
					this.SendPropertyChanged("TLMess");
					this.OnTLMessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message", Storage="_Messages", ThisKey="idMess", OtherKey="TLMess")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Message", Storage="_Group", ThisKey="idGroup", OtherKey="idGroup", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._idGroup = value.idGroup;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Message_Message", Storage="_Message1", ThisKey="TLMess", OtherKey="idMess", IsForeignKey=true)]
		public Message Message1
		{
			get
			{
				return this._Message1.Entity;
			}
			set
			{
				Message previousValue = this._Message1.Entity;
				if (((previousValue != value) 
							|| (this._Message1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Message1.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Message1.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._TLMess = value.idMess;
					}
					else
					{
						this._TLMess = default(string);
					}
					this.SendPropertyChanged("Message1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Message", Storage="_Type", ThisKey="idType", OtherKey="idType", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._idType = value.idType;
					}
					else
					{
						this._idType = default(string);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_User1", ThisKey="idGroup", OtherKey="idUser", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Messages1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Messages1.Add(this);
						this._idGroup = value.idUser;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Message1 = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Message1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages_PhongHop")]
	public partial class Messages_PhongHop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idMes;
		
		private string _idPhongHop;
		
		private string _idUser;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _time;
		
		private string _idType;
		
		private string _TLMess;
		
		private EntitySet<Messages_PhongHop> _Messages_PhongHops;
		
		private EntityRef<Messages_PhongHop> _Messages_PhongHop1;
		
		private EntityRef<PhongHop> _PhongHop;
		
		private EntityRef<Type> _Type;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMesChanging(string value);
    partial void OnidMesChanged();
    partial void OnidPhongHopChanging(string value);
    partial void OnidPhongHopChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OnidTypeChanging(string value);
    partial void OnidTypeChanged();
    partial void OnTLMessChanging(string value);
    partial void OnTLMessChanged();
    #endregion
		
		public Messages_PhongHop()
		{
			this._Messages_PhongHops = new EntitySet<Messages_PhongHop>(new Action<Messages_PhongHop>(this.attach_Messages_PhongHops), new Action<Messages_PhongHop>(this.detach_Messages_PhongHops));
			this._Messages_PhongHop1 = default(EntityRef<Messages_PhongHop>);
			this._PhongHop = default(EntityRef<PhongHop>);
			this._Type = default(EntityRef<Type>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMes", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idMes
		{
			get
			{
				return this._idMes;
			}
			set
			{
				if ((this._idMes != value))
				{
					this.OnidMesChanging(value);
					this.SendPropertyChanging();
					this._idMes = value;
					this.SendPropertyChanged("idMes");
					this.OnidMesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongHop", DbType="VarChar(20)")]
		public string idPhongHop
		{
			get
			{
				return this._idPhongHop;
			}
			set
			{
				if ((this._idPhongHop != value))
				{
					if (this._PhongHop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongHopChanging(value);
					this.SendPropertyChanging();
					this._idPhongHop = value;
					this.SendPropertyChanged("idPhongHop");
					this.OnidPhongHopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="VarChar(20)")]
		public string idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					if (this._Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLMess", DbType="VarChar(20)")]
		public string TLMess
		{
			get
			{
				return this._TLMess;
			}
			set
			{
				if ((this._TLMess != value))
				{
					if (this._Messages_PhongHop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLMessChanging(value);
					this.SendPropertyChanging();
					this._TLMess = value;
					this.SendPropertyChanged("TLMess");
					this.OnTLMessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Messages_PhongHop_Messages_PhongHop", Storage="_Messages_PhongHops", ThisKey="idMes", OtherKey="TLMess")]
		public EntitySet<Messages_PhongHop> Messages_PhongHops
		{
			get
			{
				return this._Messages_PhongHops;
			}
			set
			{
				this._Messages_PhongHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Messages_PhongHop_Messages_PhongHop", Storage="_Messages_PhongHop1", ThisKey="TLMess", OtherKey="idMes", IsForeignKey=true)]
		public Messages_PhongHop Messages_PhongHop1
		{
			get
			{
				return this._Messages_PhongHop1.Entity;
			}
			set
			{
				Messages_PhongHop previousValue = this._Messages_PhongHop1.Entity;
				if (((previousValue != value) 
							|| (this._Messages_PhongHop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Messages_PhongHop1.Entity = null;
						previousValue.Messages_PhongHops.Remove(this);
					}
					this._Messages_PhongHop1.Entity = value;
					if ((value != null))
					{
						value.Messages_PhongHops.Add(this);
						this._TLMess = value.idMes;
					}
					else
					{
						this._TLMess = default(string);
					}
					this.SendPropertyChanged("Messages_PhongHop1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_Messages_PhongHop", Storage="_PhongHop", ThisKey="idPhongHop", OtherKey="idPhongHop", IsForeignKey=true)]
		public PhongHop PhongHop
		{
			get
			{
				return this._PhongHop.Entity;
			}
			set
			{
				PhongHop previousValue = this._PhongHop.Entity;
				if (((previousValue != value) 
							|| (this._PhongHop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHop.Entity = null;
						previousValue.Messages_PhongHops.Remove(this);
					}
					this._PhongHop.Entity = value;
					if ((value != null))
					{
						value.Messages_PhongHops.Add(this);
						this._idPhongHop = value.idPhongHop;
					}
					else
					{
						this._idPhongHop = default(string);
					}
					this.SendPropertyChanged("PhongHop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Messages_PhongHop", Storage="_Type", ThisKey="idType", OtherKey="idType", IsForeignKey=true)]
		public Type Type
		{
			get
			{
				return this._Type.Entity;
			}
			set
			{
				Type previousValue = this._Type.Entity;
				if (((previousValue != value) 
							|| (this._Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Type.Entity = null;
						previousValue.Messages_PhongHops.Remove(this);
					}
					this._Type.Entity = value;
					if ((value != null))
					{
						value.Messages_PhongHops.Add(this);
						this._idType = value.idType;
					}
					else
					{
						this._idType = default(string);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Messages_PhongHop", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages_PhongHops.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages_PhongHops.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.Messages_PhongHop1 = this;
		}
		
		private void detach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.Messages_PhongHop1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongHop")]
	public partial class PhongHop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPhongHop;
		
		private string _idUser;
		
		private System.Nullable<System.DateTime> _ThoiGianBD;
		
		private System.Nullable<System.DateTime> _ThoiGianKT;
		
		private string _TenPhongHop;
		
		private System.Nullable<int> _SoThanhVien;
		
		private EntitySet<VideoCuocHop> _VideoCuocHops;
		
		private EntitySet<Messages_PhongHop> _Messages_PhongHops;
		
		private EntitySet<User_TGHop> _User_TGHops;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPhongHopChanging(string value);
    partial void OnidPhongHopChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnThoiGianBDChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDChanged();
    partial void OnThoiGianKTChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKTChanged();
    partial void OnTenPhongHopChanging(string value);
    partial void OnTenPhongHopChanged();
    partial void OnSoThanhVienChanging(System.Nullable<int> value);
    partial void OnSoThanhVienChanged();
    #endregion
		
		public PhongHop()
		{
			this._VideoCuocHops = new EntitySet<VideoCuocHop>(new Action<VideoCuocHop>(this.attach_VideoCuocHops), new Action<VideoCuocHop>(this.detach_VideoCuocHops));
			this._Messages_PhongHops = new EntitySet<Messages_PhongHop>(new Action<Messages_PhongHop>(this.attach_Messages_PhongHops), new Action<Messages_PhongHop>(this.detach_Messages_PhongHops));
			this._User_TGHops = new EntitySet<User_TGHop>(new Action<User_TGHop>(this.attach_User_TGHops), new Action<User_TGHop>(this.detach_User_TGHops));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongHop", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPhongHop
		{
			get
			{
				return this._idPhongHop;
			}
			set
			{
				if ((this._idPhongHop != value))
				{
					this.OnidPhongHopChanging(value);
					this.SendPropertyChanging();
					this._idPhongHop = value;
					this.SendPropertyChanged("idPhongHop");
					this.OnidPhongHopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKT
		{
			get
			{
				return this._ThoiGianKT;
			}
			set
			{
				if ((this._ThoiGianKT != value))
				{
					this.OnThoiGianKTChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKT = value;
					this.SendPropertyChanged("ThoiGianKT");
					this.OnThoiGianKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhongHop", DbType="NVarChar(MAX)")]
		public string TenPhongHop
		{
			get
			{
				return this._TenPhongHop;
			}
			set
			{
				if ((this._TenPhongHop != value))
				{
					this.OnTenPhongHopChanging(value);
					this.SendPropertyChanging();
					this._TenPhongHop = value;
					this.SendPropertyChanged("TenPhongHop");
					this.OnTenPhongHopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThanhVien", DbType="Int")]
		public System.Nullable<int> SoThanhVien
		{
			get
			{
				return this._SoThanhVien;
			}
			set
			{
				if ((this._SoThanhVien != value))
				{
					this.OnSoThanhVienChanging(value);
					this.SendPropertyChanging();
					this._SoThanhVien = value;
					this.SendPropertyChanged("SoThanhVien");
					this.OnSoThanhVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_VideoCuocHop", Storage="_VideoCuocHops", ThisKey="idPhongHop", OtherKey="idPhongHop")]
		public EntitySet<VideoCuocHop> VideoCuocHops
		{
			get
			{
				return this._VideoCuocHops;
			}
			set
			{
				this._VideoCuocHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_Messages_PhongHop", Storage="_Messages_PhongHops", ThisKey="idPhongHop", OtherKey="idPhongHop")]
		public EntitySet<Messages_PhongHop> Messages_PhongHops
		{
			get
			{
				return this._Messages_PhongHops;
			}
			set
			{
				this._Messages_PhongHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_User_TGHop", Storage="_User_TGHops", ThisKey="idPhongHop", OtherKey="idPhongHop")]
		public EntitySet<User_TGHop> User_TGHops
		{
			get
			{
				return this._User_TGHops;
			}
			set
			{
				this._User_TGHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhongHop", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PhongHops.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PhongHops.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VideoCuocHops(VideoCuocHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = this;
		}
		
		private void detach_VideoCuocHops(VideoCuocHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = null;
		}
		
		private void attach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = this;
		}
		
		private void detach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = null;
		}
		
		private void attach_User_TGHops(User_TGHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = this;
		}
		
		private void detach_User_TGHops(User_TGHop entity)
		{
			this.SendPropertyChanging();
			entity.PhongHop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shares")]
	public partial class Share : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idBaiViet;
		
		private string _idUser;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    #endregion
		
		public Share()
		{
			this._BaiViet = default(EntityRef<BaiViet>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_Share", Storage="_BaiViet", ThisKey="idBaiViet", OtherKey="idBaiViet", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.Shares.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.Shares.Add(this);
						this._idBaiViet = value.idBaiViet;
					}
					else
					{
						this._idBaiViet = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Share", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Shares.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Shares.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stickers")]
	public partial class Sticker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idSticker;
		
		private string _NoiDung;
		
		private string _idGroup_Sticker;
		
		private EntityRef<Group_Sticker> _Group_Sticker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStickerChanging(string value);
    partial void OnidStickerChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnidGroup_StickerChanging(string value);
    partial void OnidGroup_StickerChanged();
    #endregion
		
		public Sticker()
		{
			this._Group_Sticker = default(EntityRef<Group_Sticker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSticker", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSticker
		{
			get
			{
				return this._idSticker;
			}
			set
			{
				if ((this._idSticker != value))
				{
					this.OnidStickerChanging(value);
					this.SendPropertyChanging();
					this._idSticker = value;
					this.SendPropertyChanged("idSticker");
					this.OnidStickerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup_Sticker", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup_Sticker
		{
			get
			{
				return this._idGroup_Sticker;
			}
			set
			{
				if ((this._idGroup_Sticker != value))
				{
					if (this._Group_Sticker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroup_StickerChanging(value);
					this.SendPropertyChanging();
					this._idGroup_Sticker = value;
					this.SendPropertyChanged("idGroup_Sticker");
					this.OnidGroup_StickerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Sticker_Sticker", Storage="_Group_Sticker", ThisKey="idGroup_Sticker", OtherKey="idGroup_Sticker", IsForeignKey=true)]
		public Group_Sticker Group_Sticker
		{
			get
			{
				return this._Group_Sticker.Entity;
			}
			set
			{
				Group_Sticker previousValue = this._Group_Sticker.Entity;
				if (((previousValue != value) 
							|| (this._Group_Sticker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group_Sticker.Entity = null;
						previousValue.Stickers.Remove(this);
					}
					this._Group_Sticker.Entity = value;
					if ((value != null))
					{
						value.Stickers.Add(this);
						this._idGroup_Sticker = value.idGroup_Sticker;
					}
					else
					{
						this._idGroup_Sticker = default(string);
					}
					this.SendPropertyChanged("Group_Sticker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagBaiViet")]
	public partial class TagBaiViet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idBaiViet;
		
		private string _idUser;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    #endregion
		
		public TagBaiViet()
		{
			this._BaiViet = default(EntityRef<BaiViet>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_TagBaiViet", Storage="_BaiViet", ThisKey="idBaiViet", OtherKey="idBaiViet", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.TagBaiViets.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.TagBaiViets.Add(this);
						this._idBaiViet = value.idBaiViet;
					}
					else
					{
						this._idBaiViet = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TagBaiViet", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TagBaiViets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TagBaiViets.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Types")]
	public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idType;
		
		private string _NameType;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Messages_PhongHop> _Messages_PhongHops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTypeChanging(string value);
    partial void OnidTypeChanged();
    partial void OnNameTypeChanging(string value);
    partial void OnNameTypeChanged();
    #endregion
		
		public Type()
		{
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages_PhongHops = new EntitySet<Messages_PhongHop>(new Action<Messages_PhongHop>(this.attach_Messages_PhongHops), new Action<Messages_PhongHop>(this.detach_Messages_PhongHops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idType
		{
			get
			{
				return this._idType;
			}
			set
			{
				if ((this._idType != value))
				{
					this.OnidTypeChanging(value);
					this.SendPropertyChanging();
					this._idType = value;
					this.SendPropertyChanged("idType");
					this.OnidTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameType", DbType="NVarChar(50)")]
		public string NameType
		{
			get
			{
				return this._NameType;
			}
			set
			{
				if ((this._NameType != value))
				{
					this.OnNameTypeChanging(value);
					this.SendPropertyChanging();
					this._NameType = value;
					this.SendPropertyChanged("NameType");
					this.OnNameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Message", Storage="_Messages", ThisKey="idType", OtherKey="idType")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Messages_PhongHop", Storage="_Messages_PhongHops", ThisKey="idType", OtherKey="idType")]
		public EntitySet<Messages_PhongHop> Messages_PhongHops
		{
			get
			{
				return this._Messages_PhongHops;
			}
			set
			{
				this._Messages_PhongHops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
		
		private void attach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBao")]
	public partial class ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idThongBao;
		
		private string _NoiDung;
		
		private string _idUserNhan;
		
		private string _idUserGoi;
		
		private string _idBaiViet;
		
		private string _idCmt;
		
		private string _TrangThai;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<Comment> _Comment;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThongBaoChanging(string value);
    partial void OnidThongBaoChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnidUserNhanChanging(string value);
    partial void OnidUserNhanChanged();
    partial void OnidUserGoiChanging(string value);
    partial void OnidUserGoiChanged();
    partial void OnidBaiVietChanging(string value);
    partial void OnidBaiVietChanged();
    partial void OnidCmtChanging(string value);
    partial void OnidCmtChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public ThongBao()
		{
			this._BaiViet = default(EntityRef<BaiViet>);
			this._Comment = default(EntityRef<Comment>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThongBao", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idThongBao
		{
			get
			{
				return this._idThongBao;
			}
			set
			{
				if ((this._idThongBao != value))
				{
					this.OnidThongBaoChanging(value);
					this.SendPropertyChanging();
					this._idThongBao = value;
					this.SendPropertyChanged("idThongBao");
					this.OnidThongBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserNhan", DbType="VarChar(20)")]
		public string idUserNhan
		{
			get
			{
				return this._idUserNhan;
			}
			set
			{
				if ((this._idUserNhan != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserNhanChanging(value);
					this.SendPropertyChanging();
					this._idUserNhan = value;
					this.SendPropertyChanged("idUserNhan");
					this.OnidUserNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserGoi", DbType="VarChar(20)")]
		public string idUserGoi
		{
			get
			{
				return this._idUserGoi;
			}
			set
			{
				if ((this._idUserGoi != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserGoiChanging(value);
					this.SendPropertyChanging();
					this._idUserGoi = value;
					this.SendPropertyChanged("idUserGoi");
					this.OnidUserGoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBaiViet", DbType="VarChar(20)")]
		public string idBaiViet
		{
			get
			{
				return this._idBaiViet;
			}
			set
			{
				if ((this._idBaiViet != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBaiVietChanging(value);
					this.SendPropertyChanging();
					this._idBaiViet = value;
					this.SendPropertyChanged("idBaiViet");
					this.OnidBaiVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCmt", DbType="VarChar(20)")]
		public string idCmt
		{
			get
			{
				return this._idCmt;
			}
			set
			{
				if ((this._idCmt != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCmtChanging(value);
					this.SendPropertyChanging();
					this._idCmt = value;
					this.SendPropertyChanged("idCmt");
					this.OnidCmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_ThongBao", Storage="_BaiViet", ThisKey="idBaiViet", OtherKey="idBaiViet", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._idBaiViet = value.idBaiViet;
					}
					else
					{
						this._idBaiViet = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_ThongBao", Storage="_Comment", ThisKey="idCmt", OtherKey="idCmt", IsForeignKey=true)]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._idCmt = value.idCmt;
					}
					else
					{
						this._idCmt = default(string);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ThongBao", Storage="_User", ThisKey="idUserNhan", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._idUserNhan = value.idUser;
					}
					else
					{
						this._idUserNhan = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ThongBao1", Storage="_User1", ThisKey="idUserGoi", OtherKey="idUser", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ThongBaos1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ThongBaos1.Add(this);
						this._idUserGoi = value.idUser;
					}
					else
					{
						this._idUserGoi = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Group")]
	public partial class User_Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup;
		
		private string _idUser;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroupChanging(string value);
    partial void OnidGroupChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    #endregion
		
		public User_Group()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User_Group", Storage="_Group", ThisKey="idGroup", OtherKey="idGroup", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.User_Groups.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.User_Groups.Add(this);
						this._idGroup = value.idGroup;
					}
					else
					{
						this._idGroup = default(string);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Group", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Groups.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Groups.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Group_Page")]
	public partial class User_Group_Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idGroup_Page;
		
		private string _idUser;
		
		private EntityRef<Group_page> _Group_page;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGroup_PageChanging(string value);
    partial void OnidGroup_PageChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    #endregion
		
		public User_Group_Page()
		{
			this._Group_page = default(EntityRef<Group_page>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup_Page", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idGroup_Page
		{
			get
			{
				return this._idGroup_Page;
			}
			set
			{
				if ((this._idGroup_Page != value))
				{
					if (this._Group_page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGroup_PageChanging(value);
					this.SendPropertyChanging();
					this._idGroup_Page = value;
					this.SendPropertyChanged("idGroup_Page");
					this.OnidGroup_PageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_page_User_Group_Page", Storage="_Group_page", ThisKey="idGroup_Page", OtherKey="idGoup", IsForeignKey=true)]
		public Group_page Group_page
		{
			get
			{
				return this._Group_page.Entity;
			}
			set
			{
				Group_page previousValue = this._Group_page.Entity;
				if (((previousValue != value) 
							|| (this._Group_page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group_page.Entity = null;
						previousValue.User_Group_Pages.Remove(this);
					}
					this._Group_page.Entity = value;
					if ((value != null))
					{
						value.User_Group_Pages.Add(this);
						this._idGroup_Page = value.idGoup;
					}
					else
					{
						this._idGroup_Page = default(string);
					}
					this.SendPropertyChanged("Group_page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Group_Page", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_Group_Pages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_Group_Pages.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_TGHop")]
	public partial class User_TGHop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPhongHop;
		
		private string _idUser;
		
		private System.Nullable<bool> _TrangThaiMic;
		
		private System.Nullable<bool> _TrangThaiCam;
		
		private EntityRef<PhongHop> _PhongHop;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPhongHopChanging(string value);
    partial void OnidPhongHopChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnTrangThaiMicChanging(System.Nullable<bool> value);
    partial void OnTrangThaiMicChanged();
    partial void OnTrangThaiCamChanging(System.Nullable<bool> value);
    partial void OnTrangThaiCamChanged();
    #endregion
		
		public User_TGHop()
		{
			this._PhongHop = default(EntityRef<PhongHop>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongHop", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPhongHop
		{
			get
			{
				return this._idPhongHop;
			}
			set
			{
				if ((this._idPhongHop != value))
				{
					if (this._PhongHop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongHopChanging(value);
					this.SendPropertyChanging();
					this._idPhongHop = value;
					this.SendPropertyChanged("idPhongHop");
					this.OnidPhongHopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiMic", DbType="Bit")]
		public System.Nullable<bool> TrangThaiMic
		{
			get
			{
				return this._TrangThaiMic;
			}
			set
			{
				if ((this._TrangThaiMic != value))
				{
					this.OnTrangThaiMicChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiMic = value;
					this.SendPropertyChanged("TrangThaiMic");
					this.OnTrangThaiMicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiCam", DbType="Bit")]
		public System.Nullable<bool> TrangThaiCam
		{
			get
			{
				return this._TrangThaiCam;
			}
			set
			{
				if ((this._TrangThaiCam != value))
				{
					this.OnTrangThaiCamChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiCam = value;
					this.SendPropertyChanged("TrangThaiCam");
					this.OnTrangThaiCamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHop_User_TGHop", Storage="_PhongHop", ThisKey="idPhongHop", OtherKey="idPhongHop", IsForeignKey=true)]
		public PhongHop PhongHop
		{
			get
			{
				return this._PhongHop.Entity;
			}
			set
			{
				PhongHop previousValue = this._PhongHop.Entity;
				if (((previousValue != value) 
							|| (this._PhongHop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHop.Entity = null;
						previousValue.User_TGHops.Remove(this);
					}
					this._PhongHop.Entity = value;
					if ((value != null))
					{
						value.User_TGHops.Add(this);
						this._idPhongHop = value.idPhongHop;
					}
					else
					{
						this._idPhongHop = default(string);
					}
					this.SendPropertyChanged("PhongHop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_TGHop", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_TGHops.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_TGHops.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserConnection")]
	public partial class UserConnection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idUser;
		
		private string _ConnectionId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnConnectionIdChanging(string value);
    partial void OnConnectionIdChanged();
    #endregion
		
		public UserConnection()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20)")]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionId", DbType="VarChar(50)")]
		public string ConnectionId
		{
			get
			{
				return this._ConnectionId;
			}
			set
			{
				if ((this._ConnectionId != value))
				{
					this.OnConnectionIdChanging(value);
					this.SendPropertyChanging();
					this._ConnectionId = value;
					this.SendPropertyChanged("ConnectionId");
					this.OnConnectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserConnection", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserConnections.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserConnections.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idUser;
		
		private string _FullName;
		
		private string _SDT;
		
		private string _Email;
		
		private string _Password;
		
		private string _HinhAnh;
		
		private string _GioiTinh;
		
		private System.Nullable<bool> _isOnline;
		
		private string _QueQuan;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<int> _SoBanBe;
		
		private EntitySet<BaiViet> _BaiViets;
		
		private EntitySet<VideoCuocHop> _VideoCuocHops;
		
		private EntitySet<BanBe> _BanBes;
		
		private EntitySet<BanBe> _BanBes1;
		
		private EntitySet<Call> _Calls;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Group_page> _Group_pages;
		
		private EntitySet<Group> _Groups;
		
		private EntitySet<Like> _Likes;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Message> _Messages1;
		
		private EntitySet<Messages_PhongHop> _Messages_PhongHops;
		
		private EntitySet<PhongHop> _PhongHops;
		
		private EntitySet<Share> _Shares;
		
		private EntitySet<TagBaiViet> _TagBaiViets;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntitySet<ThongBao> _ThongBaos1;
		
		private EntitySet<User_Group> _User_Groups;
		
		private EntitySet<User_Group_Page> _User_Group_Pages;
		
		private EntitySet<User_TGHop> _User_TGHops;
		
		private EntitySet<UserConnection> _UserConnections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(string value);
    partial void OnidUserChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnisOnlineChanging(System.Nullable<bool> value);
    partial void OnisOnlineChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoBanBeChanging(System.Nullable<int> value);
    partial void OnSoBanBeChanged();
    #endregion
		
		public User()
		{
			this._BaiViets = new EntitySet<BaiViet>(new Action<BaiViet>(this.attach_BaiViets), new Action<BaiViet>(this.detach_BaiViets));
			this._VideoCuocHops = new EntitySet<VideoCuocHop>(new Action<VideoCuocHop>(this.attach_VideoCuocHops), new Action<VideoCuocHop>(this.detach_VideoCuocHops));
			this._BanBes = new EntitySet<BanBe>(new Action<BanBe>(this.attach_BanBes), new Action<BanBe>(this.detach_BanBes));
			this._BanBes1 = new EntitySet<BanBe>(new Action<BanBe>(this.attach_BanBes1), new Action<BanBe>(this.detach_BanBes1));
			this._Calls = new EntitySet<Call>(new Action<Call>(this.attach_Calls), new Action<Call>(this.detach_Calls));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Group_pages = new EntitySet<Group_page>(new Action<Group_page>(this.attach_Group_pages), new Action<Group_page>(this.detach_Group_pages));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			this._Likes = new EntitySet<Like>(new Action<Like>(this.attach_Likes), new Action<Like>(this.detach_Likes));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
			this._Messages_PhongHops = new EntitySet<Messages_PhongHop>(new Action<Messages_PhongHop>(this.attach_Messages_PhongHops), new Action<Messages_PhongHop>(this.detach_Messages_PhongHops));
			this._PhongHops = new EntitySet<PhongHop>(new Action<PhongHop>(this.attach_PhongHops), new Action<PhongHop>(this.detach_PhongHops));
			this._Shares = new EntitySet<Share>(new Action<Share>(this.attach_Shares), new Action<Share>(this.detach_Shares));
			this._TagBaiViets = new EntitySet<TagBaiViet>(new Action<TagBaiViet>(this.attach_TagBaiViets), new Action<TagBaiViet>(this.detach_TagBaiViets));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._ThongBaos1 = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos1), new Action<ThongBao>(this.detach_ThongBaos1));
			this._User_Groups = new EntitySet<User_Group>(new Action<User_Group>(this.attach_User_Groups), new Action<User_Group>(this.detach_User_Groups));
			this._User_Group_Pages = new EntitySet<User_Group_Page>(new Action<User_Group_Page>(this.attach_User_Group_Pages), new Action<User_Group_Page>(this.detach_User_Group_Pages));
			this._User_TGHops = new EntitySet<User_TGHop>(new Action<User_TGHop>(this.attach_User_TGHops), new Action<User_TGHop>(this.detach_User_TGHops));
			this._UserConnections = new EntitySet<UserConnection>(new Action<UserConnection>(this.attach_UserConnections), new Action<UserConnection>(this.detach_UserConnections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarChar(4000)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOnline", DbType="Bit")]
		public System.Nullable<bool> isOnline
		{
			get
			{
				return this._isOnline;
			}
			set
			{
				if ((this._isOnline != value))
				{
					this.OnisOnlineChanging(value);
					this.SendPropertyChanging();
					this._isOnline = value;
					this.SendPropertyChanged("isOnline");
					this.OnisOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(MAX)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(MAX)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBanBe", DbType="Int")]
		public System.Nullable<int> SoBanBe
		{
			get
			{
				return this._SoBanBe;
			}
			set
			{
				if ((this._SoBanBe != value))
				{
					this.OnSoBanBeChanging(value);
					this.SendPropertyChanging();
					this._SoBanBe = value;
					this.SendPropertyChanged("SoBanBe");
					this.OnSoBanBeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BaiViet", Storage="_BaiViets", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<BaiViet> BaiViets
		{
			get
			{
				return this._BaiViets;
			}
			set
			{
				this._BaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_VideoCuocHop", Storage="_VideoCuocHops", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<VideoCuocHop> VideoCuocHops
		{
			get
			{
				return this._VideoCuocHops;
			}
			set
			{
				this._VideoCuocHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanBe", Storage="_BanBes", ThisKey="idUser", OtherKey="idUser1")]
		public EntitySet<BanBe> BanBes
		{
			get
			{
				return this._BanBes;
			}
			set
			{
				this._BanBes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BanBe1", Storage="_BanBes1", ThisKey="idUser", OtherKey="idUser2")]
		public EntitySet<BanBe> BanBes1
		{
			get
			{
				return this._BanBes1;
			}
			set
			{
				this._BanBes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Call", Storage="_Calls", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Call> Calls
		{
			get
			{
				return this._Calls;
			}
			set
			{
				this._Calls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group_page", Storage="_Group_pages", ThisKey="idUser", OtherKey="idUserHost")]
		public EntitySet<Group_page> Group_pages
		{
			get
			{
				return this._Group_pages;
			}
			set
			{
				this._Group_pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Group", Storage="_Groups", ThisKey="idUser", OtherKey="idUserQL")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Like", Storage="_Likes", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Like> Likes
		{
			get
			{
				return this._Likes;
			}
			set
			{
				this._Likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_Messages1", ThisKey="idUser", OtherKey="idGroup")]
		public EntitySet<Message> Messages1
		{
			get
			{
				return this._Messages1;
			}
			set
			{
				this._Messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Messages_PhongHop", Storage="_Messages_PhongHops", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Messages_PhongHop> Messages_PhongHops
		{
			get
			{
				return this._Messages_PhongHops;
			}
			set
			{
				this._Messages_PhongHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PhongHop", Storage="_PhongHops", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<PhongHop> PhongHops
		{
			get
			{
				return this._PhongHops;
			}
			set
			{
				this._PhongHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Share", Storage="_Shares", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Share> Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				this._Shares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TagBaiViet", Storage="_TagBaiViets", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<TagBaiViet> TagBaiViets
		{
			get
			{
				return this._TagBaiViets;
			}
			set
			{
				this._TagBaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ThongBao", Storage="_ThongBaos", ThisKey="idUser", OtherKey="idUserNhan")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ThongBao1", Storage="_ThongBaos1", ThisKey="idUser", OtherKey="idUserGoi")]
		public EntitySet<ThongBao> ThongBaos1
		{
			get
			{
				return this._ThongBaos1;
			}
			set
			{
				this._ThongBaos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Group", Storage="_User_Groups", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<User_Group> User_Groups
		{
			get
			{
				return this._User_Groups;
			}
			set
			{
				this._User_Groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_Group_Page", Storage="_User_Group_Pages", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<User_Group_Page> User_Group_Pages
		{
			get
			{
				return this._User_Group_Pages;
			}
			set
			{
				this._User_Group_Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_TGHop", Storage="_User_TGHops", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<User_TGHop> User_TGHops
		{
			get
			{
				return this._User_TGHops;
			}
			set
			{
				this._User_TGHops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserConnection", Storage="_UserConnections", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<UserConnection> UserConnections
		{
			get
			{
				return this._UserConnections;
			}
			set
			{
				this._UserConnections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_VideoCuocHops(VideoCuocHop entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_VideoCuocHops(VideoCuocHop entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BanBes(BanBe entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BanBes(BanBe entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BanBes1(BanBe entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_BanBes1(BanBe entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Calls(Call entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Group_pages(Group_page entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Group_pages(Group_page entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages_PhongHops(Messages_PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PhongHops(PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PhongHops(PhongHop entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TagBaiViets(TagBaiViet entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TagBaiViets(TagBaiViet entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ThongBaos1(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ThongBaos1(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Groups(User_Group entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_Group_Pages(User_Group_Page entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_Group_Pages(User_Group_Page entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_User_TGHops(User_TGHop entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_TGHops(User_TGHop entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserConnections(UserConnection entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserConnections(UserConnection entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
